{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchRecommendations,fetchMovieTitles}from'../api';import MovieCarousel from'./MovieCarousel';import'./MovieSearch.css';import tmdbLogo from'./tmdb_logo.svg';// Update the path to your TMDB logo file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const movieIds=[550,1366,299536,297762,19995,4922,142061,578,597,1726,102382,503314,103];const API_KEY=process.env.REACT_APP_TMDB_API_KEY;console.log('API Key:',API_KEY);const MovieSearch=()=>{const[inputValue,setInputValue]=useState('');const[titles,setTitles]=useState([]);const[filteredTitles,setFilteredTitles]=useState([]);const[recommendations,setRecommendations]=useState([]);const[error,setError]=useState('');const[showSuggestions,setShowSuggestions]=useState(false);const[carouselMovies,setCarouselMovies]=useState([]);const[genreFilter,setGenreFilter]=useState('');const[ratingFilter,setRatingFilter]=useState('');useEffect(()=>{const loadCarouselMovies=async()=>{try{const moviePromises=movieIds.map(id=>fetch(\"https://api.themoviedb.org/3/movie/\".concat(id,\"?api_key=\").concat(API_KEY)).then(response=>response.json()));const movies=await Promise.all(moviePromises);setCarouselMovies(movies);}catch(error){console.error('Error fetching movie details for carousel:',error);setError('Error fetching movie details for carousel.');}};loadCarouselMovies();},[]);useEffect(()=>{const loadTitles=async()=>{try{const titles=await fetchMovieTitles();setTitles(titles);}catch(error){setError('Error fetching movie titles.');}};loadTitles();},[]);useEffect(()=>{if(inputValue){setFilteredTitles(titles.filter(title=>title.toLowerCase().includes(inputValue.toLowerCase())));setShowSuggestions(true);}else{setFilteredTitles([]);setShowSuggestions(false);}},[inputValue,titles]);const handleInputChange=event=>{setInputValue(event.target.value);};const handleSuggestionClick=title=>{setInputValue(title);setShowSuggestions(false);};const handleSearch=async()=>{try{const data=await fetchRecommendations(inputValue,genreFilter,ratingFilter);setRecommendations(data);setError('');}catch(error){setError('Error fetching recommendations.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"MovieSearch\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Movie Recommender\"}),/*#__PURE__*/_jsx(MovieCarousel,{movies:carouselMovies}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleInputChange,placeholder:\"Type to filter movies\",className:\"search-input\"}),showSuggestions&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions-list\",children:filteredTitles.map((title,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleSuggestionClick(title),className:\"suggestion-item\",children:title},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-item\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"genreFilter\",children:\"Genre (optional):\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"genreFilter\",value:genreFilter,onChange:e=>setGenreFilter(e.target.value),className:\"filter-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Genres\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Drama\",children:\"Drama\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Comedy\",children:\"Comedy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Action\",children:\"Action\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Fantasy\",children:\"Fantasy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Adventure\",children:\"Adventure\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Crime\",children:\"Crime\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Thriller\",children:\"Thriller\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Horror\",children:\"Horror\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Romance\",children:\"Romance\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-item\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ratingFilter\",children:\"Min Rating (optional):\"}),/*#__PURE__*/_jsx(\"input\",{id:\"ratingFilter\",type:\"number\",value:ratingFilter,onChange:e=>setRatingFilter(e.target.value),placeholder:\"Min Rating\",className:\"filter-input\"})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,className:\"search-button\",children:\"Show Recommendations\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"movie-recommendations\",children:recommendations.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"recommendations-scroll\",children:recommendations.map(movie=>/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:movie.title}),/*#__PURE__*/_jsx(\"img\",{src:movie.poster_path?\"https://image.tmdb.org/t/p/w200\".concat(movie.poster_path):'https://via.placeholder.com/200',alt:movie.title})]},movie.id))})}),/*#__PURE__*/_jsxs(\"footer\",{className:\"tmdb-attribution\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"This application uses TMDB and the TMDB APIs but is not endorsed, certified, or otherwise approved by TMDB.\"}),/*#__PURE__*/_jsx(\"img\",{src:tmdbLogo,alt:\"TMDB Logo\",style:{width:'100px'}})]})]});};export default MovieSearch;","map":{"version":3,"names":["React","useState","useEffect","fetchRecommendations","fetchMovieTitles","MovieCarousel","tmdbLogo","jsx","_jsx","jsxs","_jsxs","movieIds","API_KEY","process","env","REACT_APP_TMDB_API_KEY","console","log","MovieSearch","inputValue","setInputValue","titles","setTitles","filteredTitles","setFilteredTitles","recommendations","setRecommendations","error","setError","showSuggestions","setShowSuggestions","carouselMovies","setCarouselMovies","genreFilter","setGenreFilter","ratingFilter","setRatingFilter","loadCarouselMovies","moviePromises","map","id","fetch","concat","then","response","json","movies","Promise","all","loadTitles","filter","title","toLowerCase","includes","handleInputChange","event","target","value","handleSuggestionClick","handleSearch","data","className","children","type","onChange","placeholder","index","onClick","htmlFor","e","style","color","length","movie","src","poster_path","alt","width"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\nimport tmdbLogo from './tmdb_logo.svg'; // Update the path to your TMDB logo file\n\nconst movieIds = [\n    550, 1366, 299536, 297762, 19995, 4922, 142061, 578, 597, 1726, 102382, 503314, 103\n];\n\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nconsole.log('API Key:', API_KEY);\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [titles, setTitles] = useState([]);\n    const [filteredTitles, setFilteredTitles] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const [carouselMovies, setCarouselMovies] = useState([]);\n    const [genreFilter, setGenreFilter] = useState('');\n    const [ratingFilter, setRatingFilter] = useState('');\n\n    useEffect(() => {\n        const loadCarouselMovies = async () => {\n            try {\n                const moviePromises = movieIds.map(id =>\n                    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n                        .then(response => response.json())\n                );\n                const movies = await Promise.all(moviePromises);\n                setCarouselMovies(movies);\n            } catch (error) {\n                console.error('Error fetching movie details for carousel:', error);\n                setError('Error fetching movie details for carousel.');\n            }\n        };\n\n        loadCarouselMovies();\n    }, []);\n\n    useEffect(() => {\n        const loadTitles = async () => {\n            try {\n                const titles = await fetchMovieTitles();\n                setTitles(titles);\n            } catch (error) {\n                setError('Error fetching movie titles.');\n            }\n        };\n\n        loadTitles();\n    }, []);\n\n    useEffect(() => {\n        if (inputValue) {\n            setFilteredTitles(titles.filter(title =>\n                title.toLowerCase().includes(inputValue.toLowerCase())\n            ));\n            setShowSuggestions(true);\n        } else {\n            setFilteredTitles([]);\n            setShowSuggestions(false);\n        }\n    }, [inputValue, titles]);\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleSuggestionClick = (title) => {\n        setInputValue(title);\n        setShowSuggestions(false);\n    };\n\n    const handleSearch = async () => {\n        try {\n            const data = await fetchRecommendations(inputValue, genreFilter, ratingFilter);\n            setRecommendations(data);\n            setError('');\n        } catch (error) {\n            setError('Error fetching recommendations.');\n        }\n    };\n\n    return (\n        <div className=\"MovieSearch\">\n            <h1>Movie Recommender</h1>\n            {/* Display the carousel with movie posters */}\n            <MovieCarousel movies={carouselMovies} />\n            <div className=\"search-container\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder=\"Type to filter movies\"\n                    className=\"search-input\"\n                />\n                {showSuggestions && (\n                    <ul className=\"suggestions-list\">\n                        {filteredTitles.map((title, index) => (\n                            <li\n                                key={index}\n                                onClick={() => handleSuggestionClick(title)}\n                                className=\"suggestion-item\"\n                            >\n                                {title}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n                <div className=\"filter-container\">\n                    <div className=\"filter-item\">\n                        <label htmlFor=\"genreFilter\">Genre (optional):</label>\n                        <select\n                            id=\"genreFilter\"\n                            value={genreFilter}\n                            onChange={(e) => setGenreFilter(e.target.value)}\n                            className=\"filter-select\"\n                        >\n                            <option value=\"\">All Genres</option>\n                            <option value=\"Drama\">Drama</option>\n                            <option value=\"Comedy\">Comedy</option>\n                            <option value=\"Action\">Action</option>\n                            <option value=\"Fantasy\">Fantasy</option>\n                            <option value=\"Adventure\">Adventure</option>\n                            <option value=\"Crime\">Crime</option>\n                            <option value=\"Thriller\">Thriller</option>\n                            <option value=\"Horror\">Horror</option>\n                            <option value=\"Romance\">Romance</option>\n                            {/* Add more genres as needed */}\n                        </select>\n                    </div>\n                    <div className=\"filter-item\">\n                        <label htmlFor=\"ratingFilter\">Min Rating (optional):</label>\n                        <input\n                            id=\"ratingFilter\"\n                            type=\"number\"\n                            value={ratingFilter}\n                            onChange={(e) => setRatingFilter(e.target.value)}\n                            placeholder=\"Min Rating\"\n                            className=\"filter-input\"\n                        />\n                    </div>\n                </div>\n                <button onClick={handleSearch} className=\"search-button\">Show Recommendations</button>\n            </div>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div className=\"movie-recommendations\">\n                {recommendations.length > 0 && (\n                    <div className=\"recommendations-scroll\">\n                        {recommendations.map((movie) => (\n                            <div key={movie.id} className=\"recommendation-item\">\n                                <h2>{movie.title}</h2>\n                                <img\n                                    src={movie.poster_path ? `https://image.tmdb.org/t/p/w200${movie.poster_path}` : 'https://via.placeholder.com/200'}\n                                    alt={movie.title}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n            <footer className=\"tmdb-attribution\">\n                <p>\n                This application uses TMDB and the TMDB APIs but is not endorsed, certified, or otherwise approved by TMDB.\n                </p>\n                <img src={tmdbLogo} alt=\"TMDB Logo\" style={{ width: '100px' }} />\n            </footer>\n        </div>\n    );\n};\n\nexport default MovieSearch;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,oBAAoB,CAAEC,gBAAgB,KAAQ,QAAQ,CAC/D,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,QAAQ,KAAM,iBAAiB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,QAAQ,CAAG,CACb,GAAG,CAAE,IAAI,CAAE,MAAM,CAAE,MAAM,CAAE,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,GAAG,CAAE,GAAG,CAAE,IAAI,CAAE,MAAM,CAAE,MAAM,CAAE,GAAG,CACtF,CAED,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAClDC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEL,OAAO,CAAC,CAEhC,KAAM,CAAAM,WAAW,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACoB,MAAM,CAAEC,SAAS,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACsB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACwB,eAAe,CAAEC,kBAAkB,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAAC0B,KAAK,CAAEC,QAAQ,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAC4B,eAAe,CAAEC,kBAAkB,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAAC8B,cAAc,CAAEC,iBAAiB,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACgC,WAAW,CAAEC,cAAc,CAAC,CAAGjC,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACkC,YAAY,CAAEC,eAAe,CAAC,CAAGnC,QAAQ,CAAC,EAAE,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAmC,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACA,KAAM,CAAAC,aAAa,CAAG3B,QAAQ,CAAC4B,GAAG,CAACC,EAAE,EACjCC,KAAK,uCAAAC,MAAA,CAAuCF,EAAE,cAAAE,MAAA,CAAY9B,OAAO,CAAE,CAAC,CAC/D+B,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CACzC,CAAC,CACD,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAACV,aAAa,CAAC,CAC/CN,iBAAiB,CAACc,MAAM,CAAC,CAC7B,CAAE,MAAOnB,KAAK,CAAE,CACZX,OAAO,CAACW,KAAK,CAAC,4CAA4C,CAAEA,KAAK,CAAC,CAClEC,QAAQ,CAAC,4CAA4C,CAAC,CAC1D,CACJ,CAAC,CAEDS,kBAAkB,CAAC,CAAC,CACxB,CAAC,CAAE,EAAE,CAAC,CAENnC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA+C,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACA,KAAM,CAAA5B,MAAM,CAAG,KAAM,CAAAjB,gBAAgB,CAAC,CAAC,CACvCkB,SAAS,CAACD,MAAM,CAAC,CACrB,CAAE,MAAOM,KAAK,CAAE,CACZC,QAAQ,CAAC,8BAA8B,CAAC,CAC5C,CACJ,CAAC,CAEDqB,UAAU,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN/C,SAAS,CAAC,IAAM,CACZ,GAAIiB,UAAU,CAAE,CACZK,iBAAiB,CAACH,MAAM,CAAC6B,MAAM,CAACC,KAAK,EACjCA,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClC,UAAU,CAACiC,WAAW,CAAC,CAAC,CACzD,CAAC,CAAC,CACFtB,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAAC,IAAM,CACHN,iBAAiB,CAAC,EAAE,CAAC,CACrBM,kBAAkB,CAAC,KAAK,CAAC,CAC7B,CACJ,CAAC,CAAE,CAACX,UAAU,CAAEE,MAAM,CAAC,CAAC,CAExB,KAAM,CAAAiC,iBAAiB,CAAIC,KAAK,EAAK,CACjCnC,aAAa,CAACmC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACrC,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAIP,KAAK,EAAK,CACrC/B,aAAa,CAAC+B,KAAK,CAAC,CACpBrB,kBAAkB,CAAC,KAAK,CAAC,CAC7B,CAAC,CAED,KAAM,CAAA6B,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAzD,oBAAoB,CAACgB,UAAU,CAAEc,WAAW,CAAEE,YAAY,CAAC,CAC9ET,kBAAkB,CAACkC,IAAI,CAAC,CACxBhC,QAAQ,CAAC,EAAE,CAAC,CAChB,CAAE,MAAOD,KAAK,CAAE,CACZC,QAAQ,CAAC,iCAAiC,CAAC,CAC/C,CACJ,CAAC,CAED,mBACIlB,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBtD,IAAA,OAAAsD,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAE1BtD,IAAA,CAACH,aAAa,EAACyC,MAAM,CAAEf,cAAe,CAAE,CAAC,cACzCrB,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BtD,IAAA,UACIuD,IAAI,CAAC,MAAM,CACXN,KAAK,CAAEtC,UAAW,CAClB6C,QAAQ,CAAEV,iBAAkB,CAC5BW,WAAW,CAAC,uBAAuB,CACnCJ,SAAS,CAAC,cAAc,CAC3B,CAAC,CACDhC,eAAe,eACZrB,IAAA,OAAIqD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC3BvC,cAAc,CAACgB,GAAG,CAAC,CAACY,KAAK,CAAEe,KAAK,gBAC7B1D,IAAA,OAEI2D,OAAO,CAAEA,CAAA,GAAMT,qBAAqB,CAACP,KAAK,CAAE,CAC5CU,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAE1BX,KAAK,EAJDe,KAKL,CACP,CAAC,CACF,CACP,cACDxD,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BpD,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBtD,IAAA,UAAO4D,OAAO,CAAC,aAAa,CAAAN,QAAA,CAAC,mBAAiB,CAAO,CAAC,cACtDpD,KAAA,WACI8B,EAAE,CAAC,aAAa,CAChBiB,KAAK,CAAExB,WAAY,CACnB+B,QAAQ,CAAGK,CAAC,EAAKnC,cAAc,CAACmC,CAAC,CAACb,MAAM,CAACC,KAAK,CAAE,CAChDI,SAAS,CAAC,eAAe,CAAAC,QAAA,eAEzBtD,IAAA,WAAQiD,KAAK,CAAC,EAAE,CAAAK,QAAA,CAAC,YAAU,CAAQ,CAAC,cACpCtD,IAAA,WAAQiD,KAAK,CAAC,OAAO,CAAAK,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpCtD,IAAA,WAAQiD,KAAK,CAAC,QAAQ,CAAAK,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtCtD,IAAA,WAAQiD,KAAK,CAAC,QAAQ,CAAAK,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtCtD,IAAA,WAAQiD,KAAK,CAAC,SAAS,CAAAK,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxCtD,IAAA,WAAQiD,KAAK,CAAC,WAAW,CAAAK,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC5CtD,IAAA,WAAQiD,KAAK,CAAC,OAAO,CAAAK,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpCtD,IAAA,WAAQiD,KAAK,CAAC,UAAU,CAAAK,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1CtD,IAAA,WAAQiD,KAAK,CAAC,QAAQ,CAAAK,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtCtD,IAAA,WAAQiD,KAAK,CAAC,SAAS,CAAAK,QAAA,CAAC,SAAO,CAAQ,CAAC,EAEpC,CAAC,EACR,CAAC,cACNpD,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBtD,IAAA,UAAO4D,OAAO,CAAC,cAAc,CAAAN,QAAA,CAAC,wBAAsB,CAAO,CAAC,cAC5DtD,IAAA,UACIgC,EAAE,CAAC,cAAc,CACjBuB,IAAI,CAAC,QAAQ,CACbN,KAAK,CAAEtB,YAAa,CACpB6B,QAAQ,CAAGK,CAAC,EAAKjC,eAAe,CAACiC,CAAC,CAACb,MAAM,CAACC,KAAK,CAAE,CACjDQ,WAAW,CAAC,YAAY,CACxBJ,SAAS,CAAC,cAAc,CAC3B,CAAC,EACD,CAAC,EACL,CAAC,cACNrD,IAAA,WAAQ2D,OAAO,CAAER,YAAa,CAACE,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,sBAAoB,CAAQ,CAAC,EACrF,CAAC,CACLnC,KAAK,eAAInB,IAAA,MAAG8D,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAT,QAAA,CAAEnC,KAAK,CAAI,CAAC,cACjDnB,IAAA,QAAKqD,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CACjCrC,eAAe,CAAC+C,MAAM,CAAG,CAAC,eACvBhE,IAAA,QAAKqD,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAClCrC,eAAe,CAACc,GAAG,CAAEkC,KAAK,eACvB/D,KAAA,QAAoBmD,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAC/CtD,IAAA,OAAAsD,QAAA,CAAKW,KAAK,CAACtB,KAAK,CAAK,CAAC,cACtB3C,IAAA,QACIkE,GAAG,CAAED,KAAK,CAACE,WAAW,mCAAAjC,MAAA,CAAqC+B,KAAK,CAACE,WAAW,EAAK,iCAAkC,CACnHC,GAAG,CAAEH,KAAK,CAACtB,KAAM,CACpB,CAAC,GALIsB,KAAK,CAACjC,EAMX,CACR,CAAC,CACD,CACR,CACA,CAAC,cACN9B,KAAA,WAAQmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAChCtD,IAAA,MAAAsD,QAAA,CAAG,6GAEH,CAAG,CAAC,cACJtD,IAAA,QAAKkE,GAAG,CAAEpE,QAAS,CAACsE,GAAG,CAAC,WAAW,CAACN,KAAK,CAAE,CAAEO,KAAK,CAAE,OAAQ,CAAE,CAAE,CAAC,EAC7D,CAAC,EACR,CAAC,CAEd,CAAC,CAED,cAAe,CAAA3D,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}