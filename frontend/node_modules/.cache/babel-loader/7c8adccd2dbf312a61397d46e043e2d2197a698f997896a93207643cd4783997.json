{"ast":null,"code":"var _jsxFileName = \"/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [filteredTitles, setFilteredTitles] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState('');\n\n  // Fetch movie titles from backend\n  useEffect(() => {\n    const loadTitles = async () => {\n      try {\n        const titles = await fetchMovieTitles();\n        setTitles(titles);\n      } catch (error) {\n        setError('Error fetching movie titles.');\n      }\n    };\n    loadTitles();\n  }, []);\n\n  // Filter titles based on input value\n  useEffect(() => {\n    setFilteredTitles(titles.filter(title => title.toLowerCase().includes(inputValue.toLowerCase())));\n  }, [inputValue, titles]);\n\n  // Handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Handle dropdown selection\n  const handleSelectChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Perform search based on the current input value\n  const handleSearch = async () => {\n    try {\n      const data = await fetchRecommendations(inputValue);\n      setRecommendations(data);\n      setError('');\n    } catch (error) {\n      setError('Error fetching recommendations.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Type to filter movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: inputValue,\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), filteredTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: title,\n        children: title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSearch, \"hDcHzslZYEQnGK2Cy6tfgfi0ul4=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","fetchRecommendations","fetchMovieTitles","jsxDEV","_jsxDEV","MovieSearch","_s","inputValue","setInputValue","titles","setTitles","filteredTitles","setFilteredTitles","recommendations","setRecommendations","error","setError","loadTitles","filter","title","toLowerCase","includes","handleInputChange","event","target","value","handleSelectChange","handleSearch","data","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","index","onClick","movie","src","poster_path","alt","id","_c","$RefreshReg$"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [titles, setTitles] = useState([]);\n    const [filteredTitles, setFilteredTitles] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n\n    // Fetch movie titles from backend\n    useEffect(() => {\n        const loadTitles = async () => {\n            try {\n                const titles = await fetchMovieTitles();\n                setTitles(titles);\n            } catch (error) {\n                setError('Error fetching movie titles.');\n            }\n        };\n\n        loadTitles();\n    }, []);\n\n    // Filter titles based on input value\n    useEffect(() => {\n        setFilteredTitles(titles.filter(title =>\n            title.toLowerCase().includes(inputValue.toLowerCase())\n        ));\n    }, [inputValue, titles]);\n\n    // Handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    // Handle dropdown selection\n    const handleSelectChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    // Perform search based on the current input value\n    const handleSearch = async () => {\n        try {\n            const data = await fetchRecommendations(inputValue);\n            setRecommendations(data);\n            setError('');\n        } catch (error) {\n            setError('Error fetching recommendations.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Movie Recommender</h1>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Type to filter movies\"\n            />\n            <select\n                value={inputValue}\n                onChange={handleSelectChange}\n            >\n                <option value=\"\">Select a movie</option>\n                {filteredTitles.map((title, index) => (\n                    <option key={index} value={title}>\n                        {title}\n                    </option>\n                ))}\n            </select>\n            <button onClick={handleSearch}>Search</button>\n            {error && <p>{error}</p>}\n            <div>\n                {recommendations.map((movie) => (\n                    <div key={movie.id}>\n                        <h2>{movie.title}</h2>\n                        <img\n                            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                            alt={movie.title}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}