{"ast":null,"code":"var _jsxFileName = \"/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\n\n// Static list of movie IDs for the carousel\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movieIds = [550, 1366, 299536, 297762, 19995, 4922, 142061, 578, 597, 1726, 102382, 503314, 103];\nconst fetchPoster = async movieId => {\n  const apiKey = 'db500e03d11e130a088f324c0da44299';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.poster_path ? `https://image.tmdb.org/t/p/w500/${data.poster_path}` : '';\n};\nconst MovieSearch = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [filteredTitles, setFilteredTitles] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [carouselMovies, setCarouselMovies] = useState([]);\n\n  // Fetch movie titles from backend\n  useEffect(() => {\n    const loadTitles = async () => {\n      try {\n        const response = await fetch('/api/movie-titles');\n        const responseText = await response.text(); // Read response text for debugging\n        console.log('Response Text:', responseText);\n        if (response.ok) {\n          const contentType = response.headers.get('content-type');\n          if (contentType && contentType.includes('application/json')) {\n            const data = JSON.parse(responseText);\n            setTitles(data);\n          } else {\n            throw new Error('Expected JSON but received a different content type.');\n          }\n        } else {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(`Error fetching movie titles: ${error}`);\n        setError('Error fetching movie titles.');\n      }\n    };\n    loadTitles();\n  }, []);\n\n  // Fetch static movie posters for the carousel\n  useEffect(() => {\n    const loadCarouselMovies = async () => {\n      const posters = await Promise.all(movieIds.map(id => fetchPoster(id)));\n      setCarouselMovies(posters);\n    };\n    loadCarouselMovies();\n  }, []);\n\n  // Filter titles based on input value\n  useEffect(() => {\n    if (inputValue) {\n      setFilteredTitles(titles.filter(title => title.toLowerCase().includes(inputValue.toLowerCase())));\n      setShowSuggestions(true);\n    } else {\n      setFilteredTitles([]);\n      setShowSuggestions(false);\n    }\n  }, [inputValue, titles]);\n\n  // Handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Handle suggestion click\n  const handleSuggestionClick = title => {\n    setInputValue(title);\n    setShowSuggestions(false);\n  };\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/recommend/${encodeURIComponent(inputValue)}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        const data = await response.json();\n        setRecommendations(data);\n        setError('');\n      } else {\n        const text = await response.text(); // Read response text for debugging\n        throw new Error(`Received non-JSON response: ${text}`);\n      }\n    } catch (error) {\n      console.error(`Error fetching recommendations: ${error}`);\n      setError('Error fetching recommendations.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieSearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {\n      movies: carouselMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type to filter movies\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: filteredTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(title),\n          className: \"suggestion-item\",\n          children: title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-recommendations\",\n      children: recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-scroll\",\n        children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image',\n            alt: movie.title,\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSearch, \"zaXjRKx7dAbcRSh7YUV8D9ahJrY=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","MovieCarousel","jsxDEV","_jsxDEV","movieIds","fetchPoster","movieId","apiKey","url","response","fetch","data","json","poster_path","MovieSearch","_s","inputValue","setInputValue","titles","setTitles","filteredTitles","setFilteredTitles","recommendations","setRecommendations","error","setError","showSuggestions","setShowSuggestions","carouselMovies","setCarouselMovies","loadTitles","responseText","text","console","log","ok","contentType","headers","get","includes","JSON","parse","Error","status","loadCarouselMovies","posters","Promise","all","map","id","filter","title","toLowerCase","handleInputChange","event","target","value","handleSuggestionClick","handleSearch","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movies","style","position","marginBottom","type","onChange","placeholder","index","onClick","color","length","movie","src","alt","onError","e","onerror","_c","$RefreshReg$"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\n\n// Static list of movie IDs for the carousel\nconst movieIds = [\n    550, 1366, 299536, 297762, 19995, 4922, 142061, 578, 597, 1726, 102382, 503314, 103\n];\n\nconst fetchPoster = async (movieId) => {\n    const apiKey = 'db500e03d11e130a088f324c0da44299';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.poster_path ? `https://image.tmdb.org/t/p/w500/${data.poster_path}` : '';\n};\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [titles, setTitles] = useState([]);\n    const [filteredTitles, setFilteredTitles] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const [carouselMovies, setCarouselMovies] = useState([]);\n\n    // Fetch movie titles from backend\n    useEffect(() => {\n        const loadTitles = async () => {\n            try {\n                const response = await fetch('/api/movie-titles');\n                const responseText = await response.text(); // Read response text for debugging\n                console.log('Response Text:', responseText);\n                if (response.ok) {\n                    const contentType = response.headers.get('content-type');\n                    if (contentType && contentType.includes('application/json')) {\n                        const data = JSON.parse(responseText);\n                        setTitles(data);\n                    } else {\n                        throw new Error('Expected JSON but received a different content type.');\n                    }\n                } else {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n            } catch (error) {\n                console.error(`Error fetching movie titles: ${error}`);\n                setError('Error fetching movie titles.');\n            }\n        };\n\n        loadTitles();\n    }, []);\n\n    // Fetch static movie posters for the carousel\n    useEffect(() => {\n        const loadCarouselMovies = async () => {\n            const posters = await Promise.all(movieIds.map(id => fetchPoster(id)));\n            setCarouselMovies(posters);\n        };\n\n        loadCarouselMovies();\n    }, []);\n\n    // Filter titles based on input value\n    useEffect(() => {\n        if (inputValue) {\n            setFilteredTitles(titles.filter(title =>\n                title.toLowerCase().includes(inputValue.toLowerCase())\n            ));\n            setShowSuggestions(true);\n        } else {\n            setFilteredTitles([]);\n            setShowSuggestions(false);\n        }\n    }, [inputValue, titles]);\n\n    // Handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    // Handle suggestion click\n    const handleSuggestionClick = (title) => {\n        setInputValue(title);\n        setShowSuggestions(false);\n    };\n\n    const handleSearch = async () => {\n        try {\n            const response = await fetch(`/api/recommend/${encodeURIComponent(inputValue)}`);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n                const data = await response.json();\n                setRecommendations(data);\n                setError('');\n            } else {\n                const text = await response.text(); // Read response text for debugging\n                throw new Error(`Received non-JSON response: ${text}`);\n            }\n        } catch (error) {\n            console.error(`Error fetching recommendations: ${error}`);\n            setError('Error fetching recommendations.');\n        }\n    };\n\n    return (\n        <div className=\"MovieSearch\">\n            <h1>Movie Recommender</h1>\n            <MovieCarousel movies={carouselMovies} />\n            <div style={{ position: 'relative', marginBottom: '20px' }}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder=\"Type to filter movies\"\n                    className=\"search-input\"\n                />\n                {showSuggestions && (\n                    <ul className=\"suggestions-list\">\n                        {filteredTitles.map((title, index) => (\n                            <li\n                                key={index}\n                                onClick={() => handleSuggestionClick(title)}\n                                className=\"suggestion-item\"\n                            >\n                                {title}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n            <button onClick={handleSearch} className=\"search-button\">Search</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div className=\"movie-recommendations\">\n                {recommendations.length > 0 && (\n                    <div className=\"recommendations-scroll\">\n                        {recommendations.map((movie) => (\n                            <div key={movie.id} className=\"recommendation-item\">\n                                <h2>{movie.title}</h2>\n                                <img\n                                    src={movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image'}\n                                    alt={movie.title}\n                                    onError={(e) => {\n                                        e.target.onerror = null;\n                                        e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n                                    }}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}