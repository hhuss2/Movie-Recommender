{"ast":null,"code":"var _jsxFileName = \"/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css'; // Import specific styles for MovieSearch\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [filteredTitles, setFilteredTitles] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [movieUrls, setMovieUrls] = useState([]); // State for movie poster URLs\n\n  // Fetch movie titles from backend\n  useEffect(() => {\n    const loadTitles = async () => {\n      try {\n        const titles = await fetchMovieTitles();\n        setTitles(titles);\n      } catch (error) {\n        setError('Error fetching movie titles.');\n      }\n    };\n    loadTitles();\n  }, []);\n\n  // Load some example movie URLs for carousel\n  useEffect(() => {\n    const exampleMovieUrls = ['https://image.tmdb.org/t/p/w500/1632.jpg',\n    // Replace with actual movie poster URLs\n    'https://image.tmdb.org/t/p/w500/299536.jpg', 'https://image.tmdb.org/t/p/w500/17455.jpg', 'https://image.tmdb.org/t/p/w500/2830.jpg', 'https://image.tmdb.org/t/p/w500/429422.jpg'];\n    setMovieUrls(exampleMovieUrls);\n  }, []);\n\n  // Filter titles based on input value\n  useEffect(() => {\n    if (inputValue) {\n      setFilteredTitles(titles.filter(title => title.toLowerCase().includes(inputValue.toLowerCase())));\n      setShowSuggestions(true);\n    } else {\n      setFilteredTitles([]);\n      setShowSuggestions(false);\n    }\n  }, [inputValue, titles]);\n\n  // Handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Handle suggestion click\n  const handleSuggestionClick = title => {\n    setInputValue(title);\n    setShowSuggestions(false);\n  };\n\n  // Perform search based on the current input value\n  const handleSearch = async () => {\n    try {\n      const data = await fetchRecommendations(inputValue);\n      setRecommendations(data);\n      setError('');\n    } catch (error) {\n      setError('Error fetching recommendations.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieSearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {\n      movieUrls: movieUrls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type to filter movies\",\n        style: {\n          width: '100%',\n          padding: '8px',\n          fontSize: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          position: 'absolute',\n          top: '100%',\n          left: 0,\n          backgroundColor: 'white',\n          border: '1px solid #ccc',\n          listStyleType: 'none',\n          padding: 0,\n          margin: 0,\n          width: '100%',\n          maxHeight: '200px',\n          overflowY: 'auto',\n          zIndex: 1000\n        },\n        children: filteredTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(title),\n          style: {\n            padding: '8px',\n            cursor: 'pointer',\n            borderBottom: '1px solid #ddd'\n          },\n          children: title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px'\n      },\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-recommendations\",\n      children: recommendations.length > 0 && recommendations.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSearch, \"wMsKhc6mky4zhU0AnkgbYnif8iI=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","fetchRecommendations","fetchMovieTitles","MovieCarousel","jsxDEV","_jsxDEV","MovieSearch","_s","inputValue","setInputValue","titles","setTitles","filteredTitles","setFilteredTitles","recommendations","setRecommendations","error","setError","showSuggestions","setShowSuggestions","movieUrls","setMovieUrls","loadTitles","exampleMovieUrls","filter","title","toLowerCase","includes","handleInputChange","event","target","value","handleSuggestionClick","handleSearch","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","marginBottom","type","onChange","placeholder","width","padding","fontSize","top","left","backgroundColor","border","listStyleType","margin","maxHeight","overflowY","zIndex","map","index","onClick","cursor","borderBottom","color","length","movie","src","poster_path","alt","id","_c","$RefreshReg$"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css'; // Import specific styles for MovieSearch\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [titles, setTitles] = useState([]);\n    const [filteredTitles, setFilteredTitles] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const [movieUrls, setMovieUrls] = useState([]); // State for movie poster URLs\n\n    // Fetch movie titles from backend\n    useEffect(() => {\n        const loadTitles = async () => {\n            try {\n                const titles = await fetchMovieTitles();\n                setTitles(titles);\n            } catch (error) {\n                setError('Error fetching movie titles.');\n            }\n        };\n\n        loadTitles();\n    }, []);\n\n    // Load some example movie URLs for carousel\n    useEffect(() => {\n        const exampleMovieUrls = [\n            'https://image.tmdb.org/t/p/w500/1632.jpg', // Replace with actual movie poster URLs\n            'https://image.tmdb.org/t/p/w500/299536.jpg',\n            'https://image.tmdb.org/t/p/w500/17455.jpg',\n            'https://image.tmdb.org/t/p/w500/2830.jpg',\n            'https://image.tmdb.org/t/p/w500/429422.jpg'\n        ];\n        setMovieUrls(exampleMovieUrls);\n    }, []);\n\n    // Filter titles based on input value\n    useEffect(() => {\n        if (inputValue) {\n            setFilteredTitles(titles.filter(title =>\n                title.toLowerCase().includes(inputValue.toLowerCase())\n            ));\n            setShowSuggestions(true);\n        } else {\n            setFilteredTitles([]);\n            setShowSuggestions(false);\n        }\n    }, [inputValue, titles]);\n\n    // Handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    // Handle suggestion click\n    const handleSuggestionClick = (title) => {\n        setInputValue(title);\n        setShowSuggestions(false);\n    };\n\n    // Perform search based on the current input value\n    const handleSearch = async () => {\n        try {\n            const data = await fetchRecommendations(inputValue);\n            setRecommendations(data);\n            setError('');\n        } catch (error) {\n            setError('Error fetching recommendations.');\n        }\n    };\n\n    return (\n        <div className=\"MovieSearch\">\n            <h1>Movie Recommender</h1>\n            <MovieCarousel movieUrls={movieUrls} />\n            <div style={{ position: 'relative', marginBottom: '20px' }}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder=\"Type to filter movies\"\n                    style={{ width: '100%', padding: '8px', fontSize: '16px' }}\n                />\n                {showSuggestions && (\n                    <ul style={{\n                        position: 'absolute',\n                        top: '100%',\n                        left: 0,\n                        backgroundColor: 'white',\n                        border: '1px solid #ccc',\n                        listStyleType: 'none',\n                        padding: 0,\n                        margin: 0,\n                        width: '100%',\n                        maxHeight: '200px',\n                        overflowY: 'auto',\n                        zIndex: 1000\n                    }}>\n                        {filteredTitles.map((title, index) => (\n                            <li\n                                key={index}\n                                onClick={() => handleSuggestionClick(title)}\n                                style={{\n                                    padding: '8px',\n                                    cursor: 'pointer',\n                                    borderBottom: '1px solid #ddd'\n                                }}\n                            >\n                                {title}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n            <button onClick={handleSearch} style={{ padding: '10px 20px', fontSize: '16px' }}>Search</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div className=\"movie-recommendations\">\n                {recommendations.length > 0 && recommendations.map((movie) => (\n                    <div key={movie.id} className=\"recommendation-item\">\n                        <h2>{movie.title}</h2>\n                        <img\n                            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                            alt={movie.title}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}