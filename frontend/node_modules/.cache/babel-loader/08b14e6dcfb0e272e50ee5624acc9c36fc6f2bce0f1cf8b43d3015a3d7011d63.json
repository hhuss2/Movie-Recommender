{"ast":null,"code":"// src/api.js\n\nconst API_BASE_URL = 'http://localhost:8000'; // Adjust to your backend URL\n\nexport const fetchMovieTitles = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movies/titles/`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok.');\n    }\n    const data = await response.json();\n    return data.titles; // Ensure your backend returns { titles: [...] }\n  } catch (error) {\n    console.error('Error fetching movie titles:', error);\n    throw error;\n  }\n};\nexport const fetchRecommendations = async movieTitle => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/movies/recommend/${encodeURIComponent(movieTitle)}/`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok.');\n    }\n    const data = await response.json();\n    return data.recommendations; // Ensure your backend returns { recommendations: [...] }\n  } catch (error) {\n    console.error('Error fetching movie recommendations:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchMovieTitles","response","fetch","ok","Error","data","json","titles","error","console","fetchRecommendations","movieTitle","encodeURIComponent","recommendations"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/api.js"],"sourcesContent":["// src/api.js\n\nconst API_BASE_URL = 'http://localhost:8000'; // Adjust to your backend URL\n\nexport const fetchMovieTitles = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/movies/titles/`);\n        if (!response.ok) {\n            throw new Error('Network response was not ok.');\n        }\n        const data = await response.json();\n        return data.titles; // Ensure your backend returns { titles: [...] }\n    } catch (error) {\n        console.error('Error fetching movie titles:', error);\n        throw error;\n    }\n};\n\nexport const fetchRecommendations = async (movieTitle) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/movies/recommend/${encodeURIComponent(movieTitle)}/`);\n        if (!response.ok) {\n            throw new Error('Network response was not ok.');\n        }\n        const data = await response.json();\n        return data.recommendations; // Ensure your backend returns { recommendations: [...] }\n    } catch (error) {\n        console.error('Error fetching movie recommendations:', error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,iBAAiB,CAAC;IAC9D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACnD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,MAAM,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAOC,UAAU,IAAK;EACtD,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,qBAAqBa,kBAAkB,CAACD,UAAU,CAAC,GAAG,CAAC;IACnG,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACnD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACQ,eAAe,CAAC,CAAC;EACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}