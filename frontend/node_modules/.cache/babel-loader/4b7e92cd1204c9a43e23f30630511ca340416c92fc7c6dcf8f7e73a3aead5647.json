{"ast":null,"code":"var _jsxFileName = \"/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [filteredTitles, setFilteredTitles] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  // Hardcoded list of random movies for the carousel\n  const randomMovies = [{\n    id: 1632,\n    poster_path: 'poster_path_1632',\n    title: 'Movie 1'\n  }, {\n    id: 299536,\n    poster_path: 'poster_path_299536',\n    title: 'Movie 2'\n  }, {\n    id: 17455,\n    poster_path: 'poster_path_17455',\n    title: 'Movie 3'\n  }\n  // Add more movies here\n  ];\n\n  // Fetch movie titles from backend\n  useEffect(() => {\n    const loadTitles = async () => {\n      try {\n        const titles = await fetchMovieTitles();\n        setTitles(titles);\n      } catch (error) {\n        setError('Error fetching movie titles.');\n      }\n    };\n    loadTitles();\n  }, []);\n\n  // Filter titles based on input value\n  useEffect(() => {\n    if (inputValue) {\n      setFilteredTitles(titles.filter(title => title.toLowerCase().includes(inputValue.toLowerCase())));\n      setShowSuggestions(true);\n    } else {\n      setFilteredTitles([]);\n      setShowSuggestions(false);\n    }\n  }, [inputValue, titles]);\n\n  // Handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Handle suggestion click\n  const handleSuggestionClick = title => {\n    setInputValue(title);\n    setShowSuggestions(false);\n  };\n\n  // Perform search based on the current input value\n  const handleSearch = async () => {\n    try {\n      const data = await fetchRecommendations(inputValue);\n      setRecommendations(data);\n      setError('');\n    } catch (error) {\n      setError('Error fetching recommendations.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieSearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {\n      movies: randomMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type to filter movies\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: filteredTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(title),\n          className: \"suggestion-item\",\n          children: title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-recommendations\",\n      children: recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-scroll\",\n        children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image',\n            alt: movie.title,\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSearch, \"4dDOoXNH3rXN8iv/LB9sOupEHZc=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","fetchRecommendations","fetchMovieTitles","MovieCarousel","jsxDEV","_jsxDEV","MovieSearch","_s","inputValue","setInputValue","titles","setTitles","filteredTitles","setFilteredTitles","recommendations","setRecommendations","error","setError","showSuggestions","setShowSuggestions","randomMovies","id","poster_path","title","loadTitles","filter","toLowerCase","includes","handleInputChange","event","target","value","handleSuggestionClick","handleSearch","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movies","style","position","marginBottom","type","onChange","placeholder","map","index","onClick","color","length","movie","src","alt","onError","e","onerror","_c","$RefreshReg$"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [titles, setTitles] = useState([]);\n    const [filteredTitles, setFilteredTitles] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n    const [showSuggestions, setShowSuggestions] = useState(false);\n\n    // Hardcoded list of random movies for the carousel\n    const randomMovies = [\n        { id: 1632, poster_path: 'poster_path_1632', title: 'Movie 1' },\n        { id: 299536, poster_path: 'poster_path_299536', title: 'Movie 2' },\n        { id: 17455, poster_path: 'poster_path_17455', title: 'Movie 3' },\n        // Add more movies here\n    ];\n\n    // Fetch movie titles from backend\n    useEffect(() => {\n        const loadTitles = async () => {\n            try {\n                const titles = await fetchMovieTitles();\n                setTitles(titles);\n            } catch (error) {\n                setError('Error fetching movie titles.');\n            }\n        };\n\n        loadTitles();\n    }, []);\n\n    // Filter titles based on input value\n    useEffect(() => {\n        if (inputValue) {\n            setFilteredTitles(titles.filter(title =>\n                title.toLowerCase().includes(inputValue.toLowerCase())\n            ));\n            setShowSuggestions(true);\n        } else {\n            setFilteredTitles([]);\n            setShowSuggestions(false);\n        }\n    }, [inputValue, titles]);\n\n    // Handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    // Handle suggestion click\n    const handleSuggestionClick = (title) => {\n        setInputValue(title);\n        setShowSuggestions(false);\n    };\n\n    // Perform search based on the current input value\n    const handleSearch = async () => {\n        try {\n            const data = await fetchRecommendations(inputValue);\n            setRecommendations(data);\n            setError('');\n        } catch (error) {\n            setError('Error fetching recommendations.');\n        }\n    };\n\n    return (\n        <div className=\"MovieSearch\">\n            <h1>Movie Recommender</h1>\n            {/* Always show the random movies carousel */}\n            <MovieCarousel movies={randomMovies} />\n            <div style={{ position: 'relative', marginBottom: '20px' }}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder=\"Type to filter movies\"\n                    className=\"search-input\"\n                />\n                {showSuggestions && (\n                    <ul className=\"suggestions-list\">\n                        {filteredTitles.map((title, index) => (\n                            <li\n                                key={index}\n                                onClick={() => handleSuggestionClick(title)}\n                                className=\"suggestion-item\"\n                            >\n                                {title}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n            <button onClick={handleSearch} className=\"search-button\">Search</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div className=\"movie-recommendations\">\n                {recommendations.length > 0 && (\n                    <div className=\"recommendations-scroll\">\n                        {recommendations.map((movie) => (\n                            <div key={movie.id} className=\"recommendation-item\">\n                                <h2>{movie.title}</h2>\n                                <img\n                                    src={movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image'}\n                                    alt={movie.title}\n                                    onError={(e) => {\n                                        e.target.onerror = null;\n                                        e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n                                    }}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}