{"ast":null,"code":"export const fetchMovieTitles = async () => {\n  try {\n    const response = await fetch('/movies/titles/');\n    if (!response.ok) {\n      throw new Error(`Network response was not ok: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data.titles;\n  } catch (error) {\n    console.error('Error fetching movie titles:', error);\n    throw error;\n  }\n};\nexport const fetchRecommendations = async movieTitle => {\n  try {\n    const response = await fetch(`/movies/recommend/${encodeURIComponent(movieTitle)}/`);\n    if (!response.ok) {\n      throw new Error(`Network response was not ok: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data.recommendations;\n  } catch (error) {\n    console.error('Error fetching movie recommendations:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchMovieTitles","response","fetch","ok","Error","statusText","data","json","titles","error","console","fetchRecommendations","movieTitle","encodeURIComponent","recommendations"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/api.js"],"sourcesContent":["export const fetchMovieTitles = async () => {\n    try {\n        const response = await fetch('/movies/titles/');\n        if (!response.ok) {\n            throw new Error(`Network response was not ok: ${response.statusText}`);\n        }\n        const data = await response.json();\n        return data.titles;\n    } catch (error) {\n        console.error('Error fetching movie titles:', error);\n        throw error;\n    }\n};\n\nexport const fetchRecommendations = async (movieTitle) => {\n    try {\n        const response = await fetch(`/movies/recommend/${encodeURIComponent(movieTitle)}/`);\n        if (!response.ok) {\n            throw new Error(`Network response was not ok: ${response.statusText}`);\n        }\n        const data = await response.json();\n        return data.recommendations;\n    } catch (error) {\n        console.error('Error fetching movie recommendations:', error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;IAC/C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gCAAgCH,QAAQ,CAACI,UAAU,EAAE,CAAC;IAC1E;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,MAAM;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAOC,UAAU,IAAK;EACtD,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,qBAAqBW,kBAAkB,CAACD,UAAU,CAAC,GAAG,CAAC;IACpF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gCAAgCH,QAAQ,CAACI,UAAU,EAAE,CAAC;IAC1E;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACQ,eAAe;EAC/B,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}