{"ast":null,"code":"var _jsxFileName = \"/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\n\n// Static list of movie IDs for the carousel\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movieIds = [550, 1366, 299536, 297762, 19995, 4922, 142061, 578, 597, 1726, 102382, 503314, 103];\nconst fetchPoster = async movieId => {\n  const apiKey = 'db500e03d11e130a088f324c0da44299';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.poster_path ? `https://image.tmdb.org/t/p/w500/${data.poster_path}` : '';\n};\nconst MovieSearch = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [filteredTitles, setFilteredTitles] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [carouselMovies, setCarouselMovies] = useState([]);\n\n  // Fetch movie titles from backend\n  useEffect(() => {\n    const loadTitles = async () => {\n      console.log('Fetching movie titles...'); // Add this line to check if useEffect is running\n      try {\n        const response = await fetch('/api/movie-titles');\n        const data = await response.json();\n        console.log('Fetched titles:', data); // Add this line to inspect fetched data\n        setTitles(data);\n      } catch (error) {\n        console.error('Error fetching movie titles:', error);\n        setError('Error fetching movie titles.');\n      }\n    };\n    loadTitles();\n  }, []);\n\n  // Fetch static movie posters for the carousel\n  useEffect(() => {\n    const loadCarouselMovies = async () => {\n      const posters = await Promise.all(movieIds.map(id => fetchPoster(id)));\n      setCarouselMovies(posters);\n    };\n    loadCarouselMovies();\n  }, []);\n\n  // Filter titles based on input value\n  useEffect(() => {\n    if (inputValue) {\n      setFilteredTitles(titles.filter(title => title.toLowerCase().includes(inputValue.toLowerCase())));\n      setShowSuggestions(true);\n    } else {\n      setFilteredTitles([]);\n      setShowSuggestions(false);\n    }\n  }, [inputValue, titles]);\n\n  // Handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // Handle suggestion click\n  const handleSuggestionClick = title => {\n    setInputValue(title);\n    setShowSuggestions(false);\n  };\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/api/recommend/${encodeURIComponent(inputValue)}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.includes('application/json')) {\n        const data = await response.json();\n        setRecommendations(data);\n        setError('');\n      } else {\n        const text = await response.text(); // Read response text for debugging\n        throw new Error(`Received non-JSON response: ${text}`);\n      }\n    } catch (error) {\n      console.error(`Error fetching recommendations: ${error}`);\n      setError('Error fetching recommendations.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieSearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {\n      movies: carouselMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type to filter movies\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: filteredTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(title),\n          className: \"suggestion-item\",\n          children: title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-recommendations\",\n      children: recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-scroll\",\n        children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image',\n            alt: movie.title,\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSearch, \"zaXjRKx7dAbcRSh7YUV8D9ahJrY=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","MovieCarousel","jsxDEV","_jsxDEV","movieIds","fetchPoster","movieId","apiKey","url","response","fetch","data","json","poster_path","MovieSearch","_s","inputValue","setInputValue","titles","setTitles","filteredTitles","setFilteredTitles","recommendations","setRecommendations","error","setError","showSuggestions","setShowSuggestions","carouselMovies","setCarouselMovies","loadTitles","console","log","loadCarouselMovies","posters","Promise","all","map","id","filter","title","toLowerCase","includes","handleInputChange","event","target","value","handleSuggestionClick","handleSearch","encodeURIComponent","ok","Error","status","contentType","headers","get","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movies","style","position","marginBottom","type","onChange","placeholder","index","onClick","color","length","movie","src","alt","onError","e","onerror","_c","$RefreshReg$"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\n\n// Static list of movie IDs for the carousel\nconst movieIds = [\n    550, 1366, 299536, 297762, 19995, 4922, 142061, 578, 597, 1726, 102382, 503314, 103\n];\n\nconst fetchPoster = async (movieId) => {\n    const apiKey = 'db500e03d11e130a088f324c0da44299';\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.poster_path ? `https://image.tmdb.org/t/p/w500/${data.poster_path}` : '';\n};\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [titles, setTitles] = useState([]);\n    const [filteredTitles, setFilteredTitles] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const [carouselMovies, setCarouselMovies] = useState([]);\n\n    // Fetch movie titles from backend\n    useEffect(() => {\n        const loadTitles = async () => {\n            console.log('Fetching movie titles...'); // Add this line to check if useEffect is running\n            try {\n                const response = await fetch('/api/movie-titles');\n                const data = await response.json();\n                console.log('Fetched titles:', data); // Add this line to inspect fetched data\n                setTitles(data);\n            } catch (error) {\n                console.error('Error fetching movie titles:', error);\n                setError('Error fetching movie titles.');\n            }\n        };\n    \n        loadTitles();\n    }, []);\n    \n\n    // Fetch static movie posters for the carousel\n    useEffect(() => {\n        const loadCarouselMovies = async () => {\n            const posters = await Promise.all(movieIds.map(id => fetchPoster(id)));\n            setCarouselMovies(posters);\n        };\n\n        loadCarouselMovies();\n    }, []);\n\n    // Filter titles based on input value\n    useEffect(() => {\n        if (inputValue) {\n            setFilteredTitles(titles.filter(title =>\n                title.toLowerCase().includes(inputValue.toLowerCase())\n            ));\n            setShowSuggestions(true);\n        } else {\n            setFilteredTitles([]);\n            setShowSuggestions(false);\n        }\n    }, [inputValue, titles]);\n\n    // Handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    // Handle suggestion click\n    const handleSuggestionClick = (title) => {\n        setInputValue(title);\n        setShowSuggestions(false);\n    };\n\n    const handleSearch = async () => {\n        try {\n            const response = await fetch(`/api/recommend/${encodeURIComponent(inputValue)}`);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const contentType = response.headers.get('content-type');\n            if (contentType && contentType.includes('application/json')) {\n                const data = await response.json();\n                setRecommendations(data);\n                setError('');\n            } else {\n                const text = await response.text(); // Read response text for debugging\n                throw new Error(`Received non-JSON response: ${text}`);\n            }\n        } catch (error) {\n            console.error(`Error fetching recommendations: ${error}`);\n            setError('Error fetching recommendations.');\n        }\n    };\n\n    return (\n        <div className=\"MovieSearch\">\n            <h1>Movie Recommender</h1>\n            <MovieCarousel movies={carouselMovies} />\n            <div style={{ position: 'relative', marginBottom: '20px' }}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder=\"Type to filter movies\"\n                    className=\"search-input\"\n                />\n                {showSuggestions && (\n                    <ul className=\"suggestions-list\">\n                        {filteredTitles.map((title, index) => (\n                            <li\n                                key={index}\n                                onClick={() => handleSuggestionClick(title)}\n                                className=\"suggestion-item\"\n                            >\n                                {title}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n            <button onClick={handleSearch} className=\"search-button\">Search</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div className=\"movie-recommendations\">\n                {recommendations.length > 0 && (\n                    <div className=\"recommendations-scroll\">\n                        {recommendations.map((movie) => (\n                            <div key={movie.id} className=\"recommendation-item\">\n                                <h2>{movie.title}</h2>\n                                <img\n                                    src={movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image'}\n                                    alt={movie.title}\n                                    onError={(e) => {\n                                        e.target.onerror = null;\n                                        e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n                                    }}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}