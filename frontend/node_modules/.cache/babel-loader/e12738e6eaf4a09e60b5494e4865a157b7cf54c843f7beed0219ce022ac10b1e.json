{"ast":null,"code":"var _jsxFileName = \"/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movieIds = [550, 1366, 299536, 297762, 19995, 4922, 142061, 578, 597, 1726, 102382, 503314, 103];\nconst API_KEY = 'db500e03d11e130a088f324c0da44299'; // Replace this with your actual TMDb API key\n\nconst MovieSearch = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [titles, setTitles] = useState([]);\n  const [filteredTitles, setFilteredTitles] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [error, setError] = useState('');\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [carouselMovies, setCarouselMovies] = useState([]);\n  useEffect(() => {\n    const loadCarouselMovies = async () => {\n      try {\n        const moviePromises = movieIds.map(id => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`).then(response => response.json()));\n        const movies = await Promise.all(moviePromises);\n        setCarouselMovies(movies);\n      } catch (error) {\n        console.error('Error fetching movie details for carousel:', error);\n        setError('Error fetching movie details for carousel.');\n      }\n    };\n    loadCarouselMovies();\n  }, []);\n  useEffect(() => {\n    const loadTitles = async () => {\n      try {\n        const titles = await fetchMovieTitles();\n        setTitles(titles);\n      } catch (error) {\n        setError('Error fetching movie titles.');\n      }\n    };\n    loadTitles();\n  }, []);\n  useEffect(() => {\n    if (inputValue) {\n      setFilteredTitles(titles.filter(title => title.toLowerCase().includes(inputValue.toLowerCase())));\n      setShowSuggestions(true);\n    } else {\n      setFilteredTitles([]);\n      setShowSuggestions(false);\n    }\n  }, [inputValue, titles]);\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleSuggestionClick = title => {\n    setInputValue(title);\n    setShowSuggestions(false);\n  };\n  const handleSearch = async () => {\n    try {\n      const data = await fetchRecommendations(inputValue);\n      setRecommendations(data);\n      setError('');\n    } catch (error) {\n      setError('Error fetching recommendations.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieSearch\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieMatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {\n      movies: carouselMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Type to filter movies\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: filteredTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(title),\n          className: \"suggestion-item\",\n          children: title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Show Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-recommendations\",\n      children: recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-scroll\",\n        children: recommendations.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendation-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image',\n            alt: movie.title,\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieSearch, \"zaXjRKx7dAbcRSh7YUV8D9ahJrY=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","fetchRecommendations","fetchMovieTitles","MovieCarousel","jsxDEV","_jsxDEV","movieIds","API_KEY","MovieSearch","_s","inputValue","setInputValue","titles","setTitles","filteredTitles","setFilteredTitles","recommendations","setRecommendations","error","setError","showSuggestions","setShowSuggestions","carouselMovies","setCarouselMovies","loadCarouselMovies","moviePromises","map","id","fetch","then","response","json","movies","Promise","all","console","loadTitles","filter","title","toLowerCase","includes","handleInputChange","event","target","value","handleSuggestionClick","handleSearch","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","index","onClick","style","color","length","movie","src","poster_path","alt","onError","e","onerror","_c","$RefreshReg$"],"sources":["/Users/hamzehhussein/Desktop/app/MovieMatch/movie-match-frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchRecommendations, fetchMovieTitles } from '../api';\nimport MovieCarousel from './MovieCarousel';\nimport './MovieSearch.css';\n\nconst movieIds = [\n    550, 1366, 299536, 297762, 19995, 4922, 142061, 578, 597, 1726, 102382, 503314, 103\n];\n\nconst API_KEY = 'db500e03d11e130a088f324c0da44299'; // Replace this with your actual TMDb API key\n\nconst MovieSearch = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [titles, setTitles] = useState([]);\n    const [filteredTitles, setFilteredTitles] = useState([]);\n    const [recommendations, setRecommendations] = useState([]);\n    const [error, setError] = useState('');\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    const [carouselMovies, setCarouselMovies] = useState([]);\n\n    useEffect(() => {\n        const loadCarouselMovies = async () => {\n            try {\n                const moviePromises = movieIds.map(id =>\n                    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n                        .then(response => response.json())\n                );\n                const movies = await Promise.all(moviePromises);\n                setCarouselMovies(movies);\n            } catch (error) {\n                console.error('Error fetching movie details for carousel:', error);\n                setError('Error fetching movie details for carousel.');\n            }\n        };\n\n        loadCarouselMovies();\n    }, []);\n\n    useEffect(() => {\n        const loadTitles = async () => {\n            try {\n                const titles = await fetchMovieTitles();\n                setTitles(titles);\n            } catch (error) {\n                setError('Error fetching movie titles.');\n            }\n        };\n\n        loadTitles();\n    }, []);\n\n    useEffect(() => {\n        if (inputValue) {\n            setFilteredTitles(titles.filter(title =>\n                title.toLowerCase().includes(inputValue.toLowerCase())\n            ));\n            setShowSuggestions(true);\n        } else {\n            setFilteredTitles([]);\n            setShowSuggestions(false);\n        }\n    }, [inputValue, titles]);\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleSuggestionClick = (title) => {\n        setInputValue(title);\n        setShowSuggestions(false);\n    };\n\n    const handleSearch = async () => {\n        try {\n            const data = await fetchRecommendations(inputValue);\n            setRecommendations(data);\n            setError('');\n        } catch (error) {\n            setError('Error fetching recommendations.');\n        }\n    };\n\n    return (\n        <div className=\"MovieSearch\">\n            <h1>MovieMatch</h1>\n            {/* Display the carousel with movie posters */}\n            <MovieCarousel movies={carouselMovies} />\n            <div className=\"search-container\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    placeholder=\"Type to filter movies\"\n                    className=\"search-input\"\n                />\n                {showSuggestions && (\n                    <ul className=\"suggestions-list\">\n                        {filteredTitles.map((title, index) => (\n                            <li\n                                key={index}\n                                onClick={() => handleSuggestionClick(title)}\n                                className=\"suggestion-item\"\n                            >\n                                {title}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n            <button onClick={handleSearch} className=\"search-button\">Show Recommendations</button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <div className=\"movie-recommendations\">\n                {recommendations.length > 0 && (\n                    <div className=\"recommendations-scroll\">\n                        {recommendations.map((movie) => (\n                            <div key={movie.id} className=\"recommendation-item\">\n                                <h2>{movie.title}</h2>\n                                <img\n                                    src={movie.poster_path ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}` : 'https://via.placeholder.com/500x750?text=No+Image'}\n                                    alt={movie.title}\n                                    onError={(e) => {\n                                        e.target.onerror = null;\n                                        e.target.src = 'https://via.placeholder.com/500x750?text=No+Image';\n                                    }}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}